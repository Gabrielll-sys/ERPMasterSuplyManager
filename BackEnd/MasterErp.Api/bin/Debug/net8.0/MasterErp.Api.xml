<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MasterErp.Api</name>
    </assembly>
    <members>
        <member name="M:MasterErp.Api.Controllers.AtividadesRdController.GetAllInRd(System.Int32)">
            <summary>
            Busca todas as atividades de um Rd
            </summary>
            <returns>Uma lista de atividades de um determinado Rd</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.AtividadesRdController.Post(MasterErp.Domain.Models.AtividadeRd)">
            <summary>
            Cria um relatório diário
            </summary>
            <param name="Usuario"></param>
            <returns>O Relatorio Diario Criado </returns>
            
        </member>
        <member name="M:MasterErp.Api.Controllers.AtividadesRdController.Put(System.Int32,MasterErp.Domain.Models.AtividadeRd)">
            <summary>
            Atualiza uma atividade
            </summary>
            <param name="Relatorio DiárioDiário"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.AtividadesRdController.Delete(System.Int32)">
            <summary>
            Exclui uma Atividade
            </summary>
            <param name="Id da atividadedaatividade"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.ClientesController.Post(MasterErp.Domain.Models.Cliente)">
            <summary>
            Cria um relatório diário
            </summary>
            <param name="Usuario"></param>
            <returns>O Relatorio Diario Criado </returns>
            
        </member>
        <member name="M:MasterErp.Api.Controllers.ClientesController.Put(System.Int32,MasterErp.Domain.Models.Cliente)">
            <summary>
            Atualiza uma atividade
            </summary>
            <param name="Relatorio DiárioDiário"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.ClientesController.Delete(System.Int32)">
            <summary>
            Exclui uma Atividade
            </summary>
            <param name="Id da atividadedaatividade"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.ImagensAtivididadesRdControlller.GetAll">
            <summary>
            Busca todos os as Imagens de das atividades
            </summary>
            <returns>Todos os materiais </returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ImagensAtivididadesRdControlller.GetByid(System.Int32)">
            <summary>
            Obtem material por id
            </summary>
            <param name="id">Id da imamgem de uma atividade</param>
            <returns>Materiais encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ImagensAtivididadesRdControlller.ImagemAtividadeRd(MasterErp.Domain.Models.ImagemAtividadeRd)">
            <summary>
            Criar novo Imagem de Um atividade de relatório diário
            </summary>
            <param name="id">Objeto material para ser criado</param>
            <returns>Materiais criado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ImagensAtivididadesRdControlller.Update(System.Int32,MasterErp.Domain.Models.ImagemAtividadeRd)">
            <summary>
            Atualizar o ImagemAtividadeRd pelo Id
            </summary>
            <param name="id">O Id do material a ser atualizado</param>
            <param name="model">O objeto material a ser atualizado </param>
            <response code="200">ImagemAtividadeRd encontrado</response>
            <response code="400">Id do material não é valido</response>
            <response code="404">ImagemAtividadeRd não encontrado</response>
            <response code="500">Error no servidor</response>
            <returns>O material atualizado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ImagensAtivididadesRdControlller.Delete(System.Int32)">
            <summary>
            Deleta o material pelo id fornecido
            </summary>
            <param name="id"> O id do material a ser deletado</param>
            <returns></returns>
        </member>
        <member name="T:MasterErp.Api.Controllers.InventariosController">
            <summary>
            Controlador para gerenciar os Materias
             </summary>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.GetAllInventarios">
            <summary>
            Busca todos os registros de inventários
            </summary>
            <returns>Todos os registros de inventário </returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.GetInventario(System.Int32)">
            <summary>
            Busca uma registro de inventário pelo seu Id
            </summary>
            <param name="id">O id do inventário</param>
            <returns>Inventário encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.GetLastRegisterMaterial(System.Int32)">
            <summary>
            Busca uma registro de inventário pelo seu Id
            </summary>
            <param name="id">O id do inventário</param>
            <returns>Inventário encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.BuscaCodigoInventario(System.Int32)">
            <summary>
            Busca um material com os registros do seu invetário junto
            </summary>
            <param name="id">Id do material</param>
            <returns>Material junto com os registros de seu inventário</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.FilterSearch(MasterErp.Domain.Models.FilterMaterial)">
            <summary>
            Filtro de materiais
            </summary>
            <param name="Filtro">Objeto contendo os valores para realizar a busca por filtro</param>
            <returns>Materiais de acordo com o filtro passado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.BuscaCodigoFabricante(System.String)">
            <summary>
            Busca materiais pelo código do fabricante
            </summary>
            <param name="id">Código do fabricante</param>
            <returns>Materiais de acordo com o código do fabricante passado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.BuscaDescricaoInventario(System.String)">
            <summary>
            Busca materiais descrição passada
            </summary>
            <param name="id">A descrição do(s) material(is) a serem encontrados</param>
            <returns>Materiais com a descrição encontrados</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.CreateInvetario(MasterErp.Domain.Models.Inventario)">
            <summary>
            Cria um novo registro de inventário de um determinado material
            </summary>
            <param name="inventario">Objeto de material</param>
            <returns>Inventário criado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.RemoverQuantidadeInventario(MasterErp.Domain.Models.Inventario)">
            <summary>
            Remove uma quantidade provinda da page de encanear qrcode para material
            </summary>
            <param name="inventário">Objeto de inventário</param>
            <returns>Inventário criado,após remoção da quantidade do estoque</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.PutInventario(System.Int32,MasterErp.Domain.Models.Inventario)">
            <summary>
            Atualizar o Material pelo Id
            </summary>
            <param name="id">O Id do material a ser atualizado</param>
            <param name="model">O objeto material a ser atualizado </param>
            <response code="200">Material encontrado</response>
            <response code="400">Id do material não é valido</response>
            <response code="404">Material não encontrado</response>
            <response code="500">Error no servidor</response>
            <returns>O material atualizado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.InventariosController.Delete(System.Int32)">
            <summary>
            Deleta o material pelo id fornecido
            </summary>
            <param name="id"> O id do material a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensController.GetAll">
            <summary>
            Pega todos os itens criados
            </summary>
            <param name="id"></param>
            <returns>Todos os itens ja criados</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensController.Get(System.Int32)">
            <summary>
            Pega o item por id
            </summary>
            <param name="id">Id do item</param>
            <returns>Item encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensController.GetAllMateriasOs(System.Int32)">
            <summary>
            Pega todos os materiais e quantidade que estão presentes em uma ordem de serviço
            </summary>
            <param name="id">Id da ordem de serviço</param>
            <returns>Lista de todos os materias e suas quantidade presentes na Ordem de serviço</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensController.Create(MasterErp.Domain.Models.ItemDto)">
            <summary>
            Cria novo item
            </summary>
            <param name="id">Objeto de item para ser criado</param>
            <returns>Item criado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensController.Update(System.Int32,MasterErp.Domain.Models.Item)">
            <summary>
            Atualiza Item
            </summary>
            <param name="id">Id do item a ser atualizado e seu objeto</param>
            <returns></returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensController.Delete(System.Int32)">
            <summary>
            Deleta item
            </summary>
            <param name="id">Id do item a ser deletado</param>
            <returns></returns>
        </member>
        <member name="T:MasterErp.Api.Controllers.ItensNotasFiscaisController">
            <summary>
            Controlador para gerenciar os Itens da Nota Fiscal
             </summary>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.GetAll">
            <summary>
            Pega todos os itens criados
            </summary>
            <param name="id"></param>
            <returns>Todos os itens ja criados</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.GetAllItenInOrcamento(System.Int32)">
            <summary>
            Pega todos os itens criados
            </summary>
            <param name="id"></param>
            <returns>Todos os itens ja criados</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.Get(System.Int32)">
            <summary>
            Pega o item por id
            </summary>
            <param name="id">Id do item</param>
            <returns>Item encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.GetAllMateriasOrcamento(System.Int32)">
            <summary>
            Pega todos os materiais e quantidade que estão presentes em uma ordem de serviço
            </summary>
            <param name="id">Id da ordem de serviço</param>
            <returns>Lista de todos os materias e suas quantidade presentes na Ordem de serviço</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.Create(MasterErp.Domain.Models.ItemOrcamento)">
            <summary>
            Cria novo item
            </summary>
            <param name="id">Objeto de item para ser criado</param>
            <returns>Item criado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.Update(System.Int32,MasterErp.Domain.Models.ItemOrcamento)">
            <summary>
            Atualiza Item
            </summary>
            <param name="id">Id do item a ser atualizado e seu objeto</param>
            <returns></returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.ItensOrcamentoController.Delete(System.Int32)">
            <summary>
            Deleta item
            </summary>
            <param name="id">Id do item a ser deletado</param>
            <returns></returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.LogAcoesUsuarioController.GetAll">
            <summary>
            Busca todos os Logs
            </summary>
            <returns>Retorna todos Logs </returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.LogAcoesUsuarioController.GetLogsByDate(System.DateTime)">
            <summary>
            Busca todos os materiais
            </summary>
            <returns>Retorna todos Logs </returns>
        </member>
        <member name="T:MasterErp.Api.Controllers.MateriaisController">
            <summary>
            Controlador para gerenciar os Materias
             </summary>
        </member>
        <member name="M:MasterErp.Api.Controllers.MateriaisController.GetAll">
            <summary>
            Busca todos os materiais
            </summary>
            <returns>Todos os materiais </returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.MateriaisController.GetMaterial(System.Int32)">
            <summary>
            Obtem material por id
            </summary>
            <param name="id">Id do material para ser obtido</param>
            <returns>Materiais encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.MateriaisController.GetMaterialwithInvetory(System.Int32)">
            <summary>
            Obtem material com o ultimo registro de seu inventário
            </summary>
            <param name="id">Id do material</param>
            <returns>Material e inventário encontrado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.MateriaisController.CreateMaterial(MasterErp.Domain.Models.MaterialDto)">
            <summary>
            Criar novo material
            </summary>
            <param name="dto"></param>
            <param name="id">Objeto material para ser criado</param>
            <returns>Materiais criado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.MateriaisController.PutMaterial(System.Int32,MasterErp.Domain.Models.Material)">
            <summary>
            Atualizar o Material pelo Id
            </summary>
            <param name="id">O Id do material a ser atualizado</param>
            <param name="model">O objeto material a ser atualizado </param>
            <response code="200">Material encontrado</response>
            <response code="400">Id do material não é valido</response>
            <response code="404">Material não encontrado</response>
            <response code="500">Error no servidor</response>
            <returns>O material atualizado</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.MateriaisController.Delete(System.Int32)">
            <summary>
            Deleta o material pelo id fornecido
            </summary>
            <param name="id"> O id do material a ser deletado</param>
            <returns></returns>
        </member>
        <member name="T:MasterErp.Api.Controllers.NotasFiscaisController">
            <summary>
            Controlador para gerenciar as Notas Fiscais
             </summary>
        </member>
        <member name="T:MasterErp.Api.Controllers.OrcamentosController">
            <summary>
            Controlador para gerenciar Orçamentos
             </summary>
        </member>
        <member name="M:MasterErp.Api.Controllers.OrdemServicosController.GetAll">
            <summary>
            Busca todos as ordem de serviços
            </summary>
            <param name="id"></param>
            <returns>Todos as ordem de serviços </returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.OrdemServicosController.Get(System.Int32)">
            <summary>
            Busca uma ordem de serviço pelo seu Id
            </summary>
            <param name="id">O id da ordem de serviço</param>
            <returns>Ordem de serviço encontrada</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.OrdemServicosController.Create(MasterErp.Domain.Models.OrdemServicoDto)">
            <summary>
            Cria um ordem serviço
            </summary>
            <param name="model">Um objeto que representa a ordem de serviço a ser criada</param>
            <returns>A ordem de serviço criada</returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.OrdemServicosController.UpdateAuthorize(System.Int32,MasterErp.Domain.Models.OrdemServico)">
            <summary>
            Atualizar a ordem de serviço, á autorizando
            </summary>
            <param name="id">O Id da ordem de serviço</param>
            <param name="model">O objeto de ordem de serviço a ser atualizada e autorizada </param>
            <returns></returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.OrdemServicosController.Update(System.Int32,MasterErp.Domain.Models.OrdemServico)">
            <summary>
            Atualizar a ordem de serviço sem autoriza-la
            </summary>
            <param name="id">O Id da ordem de serviço</param>
            <param name="model">O objeto de ordem de serviço a ser atualizada</param>
            <returns></returns>
        </member>
        <member name="M:MasterErp.Api.Controllers.RelatoriosDiariosController.Post">
            <summary>
            Cria um relatório diário
            </summary>
            <param name="Relatório DiárioDiário"></param>
            <returns>O Relatorio Diario Criado </returns>
            
        </member>
        <member name="M:MasterErp.Api.Controllers.RelatoriosDiariosController.Put(System.Int32,MasterErp.Domain.Models.RelatorioDiario)">
            <summary>
            Atualiza um Relatório Diario
            </summary>
            <param name="Relatorio DiárioDiário"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.RelatoriosDiariosController.FinishRd(System.Int32)">
            <summary>
            Fecha um Relatório Diário
            </summary>
            <param name="Id"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.TarefasUsuariosController.Post(MasterErp.Domain.Models.TarefaUsuario)">
            <summary>
            Cria um relatório diário
            </summary>
            <param name="Relatório DiárioDiário"></param>
            <returns>O Relatorio Diario Criado </returns>
            
        </member>
        <member name="M:MasterErp.Api.Controllers.TarefasUsuariosController.Put(System.Int32,MasterErp.Domain.Models.TarefaUsuario)">
            <summary>
            Atualiza um Relatório Diario
            </summary>
            <param name="Relatorio DiárioDiário"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.UsuariosController.Post(MasterErp.Domain.Models.UsuarioDto)">
            <summary>
            Realiza a criação de usuário no Sistema
            </summary>
            <param name="Usuario"></param>
            <returns>O Usuário Criado </returns>
            
        </member>
        <member name="M:MasterErp.Api.Controllers.UsuariosController.Put(System.Int32,MasterErp.Domain.Models.Usuario)">
            <summary>
            Atualiza um usuário
            </summary>
            <param name="Usuario"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.UsuariosController.ResetUserPassword(System.Int32)">
            <summary>
            Reseta senha do usuário
            </summary>
            <param name="Usuario"></param>
        </member>
        <member name="M:MasterErp.Api.Controllers.UsuariosController.TurnInactive(System.Int32)">
            <summary>
            Faz Com que o usuário se torne inativo,não podendo mais realizar login
            </summary>
            <param name="Id"></param>
        </member>
        <member name="T:MasterErp.Api.Extensions.ResponseExtension">
            <summary>
            Extensions to handle with the responses
            </summary>
        </member>
        <member name="M:MasterErp.Api.Extensions.ResponseExtension.ToValidationErrorReponse(FluentValidation.Results.ValidationResult)">
            <summary>
            Handle with validation objects
            </summary>
            <param name="validationResult">The validation result</param>
            <returns>The default validation response</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MasterErp.Api.Extensions.ResponseExtension.ToNotFoundReponse(Microsoft.AspNetCore.Mvc.NotFoundResult,System.String)" -->
        <member name="M:MasterErp.Api.Extensions.ResponseExtension.ToErrorReponse(System.Exception)">
            <summary>
            Handle the exceptions to a readable format
            </summary>
            <param name="exception">The exception object</param>
            <returns>The exception default response</returns>
        </member>
    </members>
</doc>
